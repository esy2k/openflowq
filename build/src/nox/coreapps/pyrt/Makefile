# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/nox/coreapps/pyrt/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# -*- makefile -*-


VPATH = ../../../../../src/nox/coreapps/pyrt
pkgdatadir = $(datadir)/nox
pkgincludedir = $(includedir)/nox
pkglibexecdir = $(libexecdir)/nox
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(srcdir)/../../../Make.vars $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
#am__append_1 = -g -DNDEBUG
#am__append_2 = -DPROFILING
am__append_3 = -D_GLIBCXX_CONCEPT_CHECKS=1 \
	-D_GLIBCXX_DEBUG=1 -D_GLIBCXX_DEBUG_PEDANTIC=1
am__append_4 = -export-dynamic
am__append_5 = $(PYTHON_CPPFLAGS)
subdir = src/nox/coreapps/pyrt
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(pkglibdir)"
LTLIBRARIES = $(pkglib_LTLIBRARIES)
_deferredcallback_la_LIBADD =
am___deferredcallback_la_SOURCES_DIST = deferredcallback.hh
am__deferredcallback_la_OBJECTS =
nodist__deferredcallback_la_OBJECTS = _deferredcallback_la-deferredcallback_wrap.lo
_deferredcallback_la_OBJECTS = $(am__deferredcallback_la_OBJECTS) \
	$(nodist__deferredcallback_la_OBJECTS)
_deferredcallback_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(_deferredcallback_la_LDFLAGS) $(LDFLAGS) -o $@
am__deferredcallback_la_rpath = -rpath $(pkglibdir)
_oxidereactor_la_LIBADD =
am___oxidereactor_la_SOURCES_DIST = oxidereactor.hh oxidereactor.i
am__oxidereactor_la_OBJECTS =
nodist__oxidereactor_la_OBJECTS =  \
	_oxidereactor_la-oxidereactor_wrap.lo
_oxidereactor_la_OBJECTS = $(am__oxidereactor_la_OBJECTS) \
	$(nodist__oxidereactor_la_OBJECTS)
_oxidereactor_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(_oxidereactor_la_LDFLAGS) $(LDFLAGS) -o $@
am__oxidereactor_la_rpath = -rpath $(pkglibdir)
_pycomponent_la_LIBADD =
am___pycomponent_la_SOURCES_DIST = pycomponent.hh component.i \
	context.i event.i kernel.i
am__pycomponent_la_OBJECTS =
nodist__pycomponent_la_OBJECTS =  \
	_pycomponent_la-pycomponent_wrap.lo
_pycomponent_la_OBJECTS = $(am__pycomponent_la_OBJECTS) \
	$(nodist__pycomponent_la_OBJECTS)
_pycomponent_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(_pycomponent_la_LDFLAGS) $(LDFLAGS) -o $@
am__pycomponent_la_rpath = -rpath $(pkglibdir)
pyrt_la_LIBADD =
am__pyrt_la_SOURCES_DIST = deferredcallback.cc deferredcallback.hh \
	pyrt.cc pyrt.hh pycontext.hh pycomponent.cc pycomponent.hh \
	pycontext.cc pyevent.hh pyglue.cc pyglue.hh
am_pyrt_la_OBJECTS = pyrt_la-deferredcallback.lo \
	pyrt_la-pyrt.lo pyrt_la-pycomponent.lo \
	pyrt_la-pycontext.lo pyrt_la-pyglue.lo
nodist_pyrt_la_OBJECTS =
pyrt_la_OBJECTS = $(am_pyrt_la_OBJECTS) $(nodist_pyrt_la_OBJECTS)
pyrt_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(pyrt_la_LDFLAGS) $(LDFLAGS) -o $@
am_pyrt_la_rpath = -rpath $(pkglibdir)
SCRIPTS = $(pkglib_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(_deferredcallback_la_SOURCES) \
	$(nodist__deferredcallback_la_SOURCES) \
	$(_oxidereactor_la_SOURCES) $(nodist__oxidereactor_la_SOURCES) \
	$(_pycomponent_la_SOURCES) $(nodist__pycomponent_la_SOURCES) \
	$(pyrt_la_SOURCES) $(nodist_pyrt_la_SOURCES)
DIST_SOURCES = $(am___deferredcallback_la_SOURCES_DIST) \
	$(am___oxidereactor_la_SOURCES_DIST) \
	$(am___pycomponent_la_SOURCES_DIST) \
	$(am__pyrt_la_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

# NOX install rules
pkglibdir = $(subst src,$(bindir),$(subdir))
ACLOCAL = ${SHELL} /home/mmcl/nox/config/missing --run aclocal-1.11
ACTIVE_PACKAGES =   coreapps  netapps  webapps
AMTAR = ${SHELL} /home/mmcl/nox/config/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/mmcl/nox/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/mmcl/nox/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/mmcl/nox/config/missing --run automake-1.11
AWK = gawk
BOOST_CPPFLAGS = -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem-mt
BOOST_LDFLAGS = -L/usr/lib
BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework-mt
BUILDNR = 0
BUILDNR_SUFFIX = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = /usr/bin/doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/mmcl/nox/config/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MODULES_coreapps = testharness coretests pyrt simple_c_app simple_c_py_app hub switch examples messenger snmp #add coreapps component here 
MODULES_netapps = storage authenticator routing user_event_log tests topology discovery bindings_storage switchstats flow_fetcher data switch_management networkstate hoststate tablog route lavi nims #add netapps component here 
MODULES_webapps = webserver webservice webserviceclient miscws #add webapps component here 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENFLOW_CPPFLAGS = -I${top_srcdir}/src/include/openflow
OPENSSL_PROG = yes
OTOOL = 
OTOOL64 = 
PACKAGE = nox
PACKAGE_BUGREPORT = contact@noxrepo.org
PACKAGE_NAME = nox
PACKAGE_STRING = nox 0.9.0(zaku)~full~beta
PACKAGE_TARNAME = nox
PACKAGE_URL = 
PACKAGE_VERSION = 0.9.0(zaku)~full~beta
PATH_SEPARATOR = :
PCAP_LDFLAGS = 
PYTHON = /usr/bin/python
PYTHON_CPPFLAGS = -I/usr/include/python2.6
PYTHON_EXTRA_LDFLAGS = -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions
PYTHON_EXTRA_LIBS = -lssl -lcrypto  -lssl -lcrypto      -L/usr/lib -lz -lpthread -ldl  -lutil -lm
PYTHON_LDFLAGS = -L/usr/lib/python2.6/config -lpython2.6
PYTHON_SITE_PKG = /usr/lib/python2.6/dist-packages
PYTHON_VERSION = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SPHINX_BUILD = /usr/bin/sphinx-build
SSL_LIBS = -lssl
STRIP = strip
SWIG = /usr/bin/swig -c++
SWIG_LIB = /usr/share/swig1.3
SWIG_PYTHON_CPPFLAGS = -I/usr/include/python2.6
SWIG_PYTHON_OPT = -python  -DSWIGWORDSIZE64
VERSION = 0.9.0(zaku)~full~beta
VMDIR = 
abs_builddir = /home/mmcl/nox/build/src/nox/coreapps/pyrt
abs_srcdir = /home/mmcl/nox/build/../src/nox/coreapps/pyrt
abs_top_builddir = /home/mmcl/nox/build
abs_top_srcdir = /home/mmcl/nox/build/..
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/mmcl/nox/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../../../../src/nox/coreapps/pyrt
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../../
top_builddir = ../../../..
top_srcdir = ../../../../..

# Include paths.

# GNU C library definitions.

# GNU C++ library definitions.
AM_CPPFLAGS = -DPKGDATADIR=\"$(pkgdatadir)\" \
	-DPKGLIBDIR=\"$(pkglibdir)\" \
	-DPKGLOCALSTATEDIR=\"$(pkglocalstatedir)\" \
	-DPKGSYSCONFDIR=\"$(pkgsysconfdir)\" -include \
	$(top_builddir)/config.h -I $(top_srcdir)/src/include \
	$(OPENFLOW_CPPFLAGS) $(BOOST_CPPFLAGS) -D_GNU_SOURCE=1 \
	$(am__append_1) $(am__append_2) -D_REENTRANT \
	-D__STDC_LIMIT_MACROS=1 -D__STDC_FORMAT_MACROS=1 \
	-D__STDC_CONSTANT_MACROS=1 $(am__append_3) $(am__append_5)
pkglocalstatedir = $(localstatedir)/$(PACKAGE)
pkgsysconfdir = $(sysconfdir)/$(PACKAGE)

# Always enable frame pointers.  The benefits for debugging outweigh
# the costs.  (On x86-64 frame pointers are disabled by default, so
# we need this option.)
COMMON_FLAGS = -fno-omit-frame-pointer -fno-strict-aliasing -Wall \
	-Wno-sign-compare -Winit-self -Wformat-nonliteral \
	-Wformat-security
AM_CXXFLAGS = $(COMMON_FLAGS)
AM_CFLAGS = $(COMMON_FLAGS) -Wstrict-prototypes -Wmissing-prototypes
LDADD = 
AM_LDFLAGS = -R$(pkglibdir) $(am__append_4)

# set python runtimefiles to be installed in the same directory as pkg
pkglib_SCRIPTS = $(NOX_RUNTIMEFILES) $(NOX_PYBUILDFILES)
BUILT_SOURCES = $(NOX_PYBUILDFILES)
WWW_BUILD_SUBDIR = $(top_builddir)/src/nox/webapps/webserver/www
nox_installsubdir = $(DESTDIR)$(subst src,$(bindir),$(subdir))
nox_installwwwdir = $(DESTDIR)$(bindir)/nox/webapps/webserver/www
EXTRA_DIST = \
	__init__.py		\
	meta.json		\
	bootstrap.py    	\
	componentws.py		\
	deferredcallback.i	\
	oxidereactor.cc		\
	pyoxidereactor.py

NOX_RUNTIMEFILES = \
	__init__.py		\
	bootstrap.py   		\
	componentws.py		\
	meta.json		\
	pyoxidereactor.py

NOX_PYBUILDFILES = \
	oxidereactor.py\
	deferredcallback.py \
	pycomponent.py

NOX_PYLIBFILES = \
	pyrt.so \
	_deferredcallback.so	\
	_oxidereactor.so	\
	_pycomponent.so

pkglib_LTLIBRARIES = \
	pyrt.la			\
	_deferredcallback.la	\
	_oxidereactor.la	\
	_pycomponent.la

pyrt_la_CPPFLAGS = \
	$(AM_CPPFLAGS) 						\
	-I$(srcdir)/../ 					\
	-I$(top_srcdir)/src/nox					\
	-I$(top_builddir)/src/nox				\
	-D__COMPONENT_FACTORY_FUNCTION__=pyrt_get_factory

pyrt_la_SOURCES = \
	deferredcallback.cc	\
	deferredcallback.hh	\
	pyrt.cc			\
	pyrt.hh			\
	pycontext.hh		\
	pycomponent.cc		\
	pycomponent.hh		\
	pycontext.cc		\
	pyevent.hh		\
	pyglue.cc		\
	pyglue.hh

nodist_pyrt_la_SOURCES = swigpyrun.h
pyrt_la_LDFLAGS = -module -export-dynamic
component_wrap_includes = \
	component.i		\
	context.i 		\
	kernel.i        	\
	event.i		

_deferredcallback_la_SOURCES = deferredcallback.hh
nodist__deferredcallback_la_SOURCES = deferredcallback_wrap.cc
_deferredcallback_la_LDFLAGS = -module
_deferredcallback_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(top_srcdir)/src/nox
_pycomponent_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(top_srcdir)/src/nox -I$(srcdir)/../ -I$(top_builddir)/src/nox/
_pycomponent_la_SOURCES = pycomponent.hh component.i context.i event.i kernel.i
nodist__pycomponent_la_SOURCES = pycomponent_wrap.cc
_pycomponent_la_LDFLAGS = -module
oxidereactor_wrap_includes = \
	oxidereactor.i

_oxidereactor_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(srcdir)/../ -I$(top_srcdir)/src/nox
_oxidereactor_la_SOURCES = oxidereactor.hh oxidereactor.i 
nodist__oxidereactor_la_SOURCES = oxidereactor_wrap.cc
_oxidereactor_la_LDFLAGS = -module
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../../../Make.vars $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/nox/coreapps/pyrt/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/nox/coreapps/pyrt/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
	}

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
_deferredcallback.la: $(_deferredcallback_la_OBJECTS) $(_deferredcallback_la_DEPENDENCIES) 
	$(_deferredcallback_la_LINK) $(am__deferredcallback_la_rpath) $(_deferredcallback_la_OBJECTS) $(_deferredcallback_la_LIBADD) $(LIBS)
_oxidereactor.la: $(_oxidereactor_la_OBJECTS) $(_oxidereactor_la_DEPENDENCIES) 
	$(_oxidereactor_la_LINK) $(am__oxidereactor_la_rpath) $(_oxidereactor_la_OBJECTS) $(_oxidereactor_la_LIBADD) $(LIBS)
_pycomponent.la: $(_pycomponent_la_OBJECTS) $(_pycomponent_la_DEPENDENCIES) 
	$(_pycomponent_la_LINK) $(am__pycomponent_la_rpath) $(_pycomponent_la_OBJECTS) $(_pycomponent_la_LIBADD) $(LIBS)
pyrt.la: $(pyrt_la_OBJECTS) $(pyrt_la_DEPENDENCIES) 
	$(pyrt_la_LINK) $(am_pyrt_la_rpath) $(pyrt_la_OBJECTS) $(pyrt_la_LIBADD) $(LIBS)
install-pkglibSCRIPTS: $(pkglib_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(MKDIR_P) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_SCRIPTS)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(pkglibdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(pkglibdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-pkglibSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_SCRIPTS)'; test -n "$(pkglibdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkglibdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkglibdir)" && rm -f $$files

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/_deferredcallback_la-deferredcallback_wrap.Plo
include ./$(DEPDIR)/_oxidereactor_la-oxidereactor_wrap.Plo
include ./$(DEPDIR)/_pycomponent_la-pycomponent_wrap.Plo
include ./$(DEPDIR)/pyrt_la-deferredcallback.Plo
include ./$(DEPDIR)/pyrt_la-pycomponent.Plo
include ./$(DEPDIR)/pyrt_la-pycontext.Plo
include ./$(DEPDIR)/pyrt_la-pyglue.Plo
include ./$(DEPDIR)/pyrt_la-pyrt.Plo

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

_deferredcallback_la-deferredcallback_wrap.lo: deferredcallback_wrap.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_deferredcallback_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT _deferredcallback_la-deferredcallback_wrap.lo -MD -MP -MF $(DEPDIR)/_deferredcallback_la-deferredcallback_wrap.Tpo -c -o _deferredcallback_la-deferredcallback_wrap.lo `test -f 'deferredcallback_wrap.cc' || echo '$(srcdir)/'`deferredcallback_wrap.cc
	$(am__mv) $(DEPDIR)/_deferredcallback_la-deferredcallback_wrap.Tpo $(DEPDIR)/_deferredcallback_la-deferredcallback_wrap.Plo
#	source='deferredcallback_wrap.cc' object='_deferredcallback_la-deferredcallback_wrap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_deferredcallback_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o _deferredcallback_la-deferredcallback_wrap.lo `test -f 'deferredcallback_wrap.cc' || echo '$(srcdir)/'`deferredcallback_wrap.cc

_oxidereactor_la-oxidereactor_wrap.lo: oxidereactor_wrap.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_oxidereactor_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT _oxidereactor_la-oxidereactor_wrap.lo -MD -MP -MF $(DEPDIR)/_oxidereactor_la-oxidereactor_wrap.Tpo -c -o _oxidereactor_la-oxidereactor_wrap.lo `test -f 'oxidereactor_wrap.cc' || echo '$(srcdir)/'`oxidereactor_wrap.cc
	$(am__mv) $(DEPDIR)/_oxidereactor_la-oxidereactor_wrap.Tpo $(DEPDIR)/_oxidereactor_la-oxidereactor_wrap.Plo
#	source='oxidereactor_wrap.cc' object='_oxidereactor_la-oxidereactor_wrap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_oxidereactor_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o _oxidereactor_la-oxidereactor_wrap.lo `test -f 'oxidereactor_wrap.cc' || echo '$(srcdir)/'`oxidereactor_wrap.cc

_pycomponent_la-pycomponent_wrap.lo: pycomponent_wrap.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_pycomponent_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT _pycomponent_la-pycomponent_wrap.lo -MD -MP -MF $(DEPDIR)/_pycomponent_la-pycomponent_wrap.Tpo -c -o _pycomponent_la-pycomponent_wrap.lo `test -f 'pycomponent_wrap.cc' || echo '$(srcdir)/'`pycomponent_wrap.cc
	$(am__mv) $(DEPDIR)/_pycomponent_la-pycomponent_wrap.Tpo $(DEPDIR)/_pycomponent_la-pycomponent_wrap.Plo
#	source='pycomponent_wrap.cc' object='_pycomponent_la-pycomponent_wrap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(_pycomponent_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o _pycomponent_la-pycomponent_wrap.lo `test -f 'pycomponent_wrap.cc' || echo '$(srcdir)/'`pycomponent_wrap.cc

pyrt_la-deferredcallback.lo: deferredcallback.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pyrt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pyrt_la-deferredcallback.lo -MD -MP -MF $(DEPDIR)/pyrt_la-deferredcallback.Tpo -c -o pyrt_la-deferredcallback.lo `test -f 'deferredcallback.cc' || echo '$(srcdir)/'`deferredcallback.cc
	$(am__mv) $(DEPDIR)/pyrt_la-deferredcallback.Tpo $(DEPDIR)/pyrt_la-deferredcallback.Plo
#	source='deferredcallback.cc' object='pyrt_la-deferredcallback.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pyrt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pyrt_la-deferredcallback.lo `test -f 'deferredcallback.cc' || echo '$(srcdir)/'`deferredcallback.cc

pyrt_la-pyrt.lo: pyrt.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pyrt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pyrt_la-pyrt.lo -MD -MP -MF $(DEPDIR)/pyrt_la-pyrt.Tpo -c -o pyrt_la-pyrt.lo `test -f 'pyrt.cc' || echo '$(srcdir)/'`pyrt.cc
	$(am__mv) $(DEPDIR)/pyrt_la-pyrt.Tpo $(DEPDIR)/pyrt_la-pyrt.Plo
#	source='pyrt.cc' object='pyrt_la-pyrt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pyrt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pyrt_la-pyrt.lo `test -f 'pyrt.cc' || echo '$(srcdir)/'`pyrt.cc

pyrt_la-pycomponent.lo: pycomponent.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pyrt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pyrt_la-pycomponent.lo -MD -MP -MF $(DEPDIR)/pyrt_la-pycomponent.Tpo -c -o pyrt_la-pycomponent.lo `test -f 'pycomponent.cc' || echo '$(srcdir)/'`pycomponent.cc
	$(am__mv) $(DEPDIR)/pyrt_la-pycomponent.Tpo $(DEPDIR)/pyrt_la-pycomponent.Plo
#	source='pycomponent.cc' object='pyrt_la-pycomponent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pyrt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pyrt_la-pycomponent.lo `test -f 'pycomponent.cc' || echo '$(srcdir)/'`pycomponent.cc

pyrt_la-pycontext.lo: pycontext.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pyrt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pyrt_la-pycontext.lo -MD -MP -MF $(DEPDIR)/pyrt_la-pycontext.Tpo -c -o pyrt_la-pycontext.lo `test -f 'pycontext.cc' || echo '$(srcdir)/'`pycontext.cc
	$(am__mv) $(DEPDIR)/pyrt_la-pycontext.Tpo $(DEPDIR)/pyrt_la-pycontext.Plo
#	source='pycontext.cc' object='pyrt_la-pycontext.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pyrt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pyrt_la-pycontext.lo `test -f 'pycontext.cc' || echo '$(srcdir)/'`pycontext.cc

pyrt_la-pyglue.lo: pyglue.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pyrt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pyrt_la-pyglue.lo -MD -MP -MF $(DEPDIR)/pyrt_la-pyglue.Tpo -c -o pyrt_la-pyglue.lo `test -f 'pyglue.cc' || echo '$(srcdir)/'`pyglue.cc
	$(am__mv) $(DEPDIR)/pyrt_la-pyglue.Tpo $(DEPDIR)/pyrt_la-pyglue.Plo
#	source='pyglue.cc' object='pyrt_la-pyglue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pyrt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pyrt_la-pyglue.lo `test -f 'pyglue.cc' || echo '$(srcdir)/'`pyglue.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(SCRIPTS) all-local
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(pkglibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-local \
	clean-pkglibLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-pkglibLTLIBRARIES install-pkglibSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-pkglibLTLIBRARIES uninstall-pkglibSCRIPTS

.MAKE: all check install install-am install-exec-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \
	clean-generic clean-libtool clean-local \
	clean-pkglibLTLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-hook install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-pkglibLTLIBRARIES \
	install-pkglibSCRIPTS install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-pkglibLTLIBRARIES \
	uninstall-pkglibSCRIPTS


# Runtime-files build and clean rules
nox-runtimefiles-build:
	@dlist="$(NOX_RUNTIMEFILES)";for f in $$dlist; do \
		if test -f ${srcdir}/$$f && test ! -f ${builddir}/$$f; then \
			echo "Soft-linking file: $(builddir)/$$f";\
			ln -sf $(srcdir)/$$f $(builddir)/$$f;\
		fi;\
	done;

nox-runtimefiles-clean:
	@dlist="$(NOX_RUNTIMEFILES)";for f in $$dlist; do \
		if test ! -f $(builddir)/$$f; then \
			echo "Removing soft-link: $(builddir)/$$f";\
			rm -f $(builddir)/$$f;\
		fi;\
	done;
	rm -f *.pyc

# Mako template build and clean rules
mako-template-build:
	@if test -d $(srcdir)/templates; then\
		if test ! -d $(builddir)/templates; then\
			echo "Soft-linking mako templates in: $(builddir)/templates";\
			ln -snf $(srcdir)/templates $(builddir)/templates;\
		fi;\
		if test ! -d $(builddir)/mako_modules; then\
			echo "Creating mako modules directory: $(builddir)/mako_modules";\
			mkdir -p $(builddir)/mako_modules;\
		fi;\
	else\
		echo "The target mako-template-build is a dependency in the";\
		echo "Makefile but there is no 'templates' subdirectory.";\
		false;\
	fi;

mako-template-clean:
	rm -rf $(builddir)/mako_modules
	@if test -L $(builddir)/templates; then\
		echo "Removing soft-link: $(builddir)/templates";\
		rm -f $(builddir)/templates;\
	fi

# Base www build rule.
#
# NOTE: this is for including things into the base level of the
# webroot directory tree.  It is not intended for constructing general
# subtrees within that directory hierarchy.  It should be used
# infrequently.  The static-www-build rule, which includes things in a
# component-specific subdirectory is much more appropriate in most
# circumstances.
base-www-build:
	mkdir -p "$(WWW_BUILD_SUBDIR)/.files"
	if test -z "$(BASE_WWW_FILES)"; then \
		if test -d "base_www"; then \
			fn=`find base_www -printf "%P\n"`; \
		else \
			fn=""; \
		fi; \
	else \
	    fn="$(BASE_WWW_FILES)"; \
	fi; \
	for f in $$fn; do \
		echo "Soft-linking from base_www: $$f";\
		ln -snf ../../$(top_srcdir)/src/$(MODULE_BASE_PATH)/$(MODULE)/base_www/$$f $(WWW_BUILD_SUBDIR)/.files;\
	done;

base-www-clean:     # Intentionally doesn't do anything

# Static www build and clean rules
static-www-build:
	@if test -d $(srcdir)/static_www; then\
		if test ! -d $(WWW_BUILD_SUBDIR)/$(MODULE_BASE_PATH); then\
			echo "Creating module www directory: $(WWW_BUILD_SUBDIR)/$(MODULE_BASE_PATH)";\
			mkdir -p $(WWW_BUILD_SUBDIR)/.files/$(MODULE_BASE_PATH);\
		fi;\
		echo "Soft-linking 'static_www' directory: $(WWW_BUILD_SUBDIR)/$(MODULE_BASE_PATH)/$(MODULE)";\
		ln -snf ../$(MODULE_BASE_ESCAPE)/../$(top_srcdir)/src/$(MODULE_BASE_PATH)/$(MODULE)/static_www $(WWW_BUILD_SUBDIR)/.files/$(MODULE_BASE_PATH)/$(MODULE);\
	else\
		echo "The target static-www-build is a dependency in the";\
		echo "Makefile but there is no 'static_www' subdirectory here.";\
		false;\
	fi;

static-www-clean:     # Intentionally doesn't do anything

# NOX rules for setting up links in remote build tree 
nox-all-local:
	@dlist="$(NOX_RUNTIMEFILES)";for f in $$dlist; do \
	  if test -f $(srcdir)/$$f && test ! -f $$f; then \
		ln -sf $(srcdir)/$$f $(builddir)/$$f;\
	  fi;\
	done;
	@dlist="$(NOX_PYLIBFILES)";for f in $$dlist; do \
	  if test ! -f $$f; then \
		ln -sf $(builddir)/.libs/$$f $(builddir)/$$f;\
	  fi;\
	done;

# NOX clean rules 
nox-clean-local:
	@find . -maxdepth 1 -name "*.py" -type l -exec rm -rf {} \;
	@rm -f *_wrap.cc *.pyc *.la *.so *.o
	@rm -rf __nox_tests
	@dlist="$(NOX_PYBUILDFILES)";for f in $$dlist; do \
      if test -f $(builddir)/$$f; then \
        rm -f $(builddir)/$$f;\
      fi;\
    done;

nox-install-local:
	@if test -d $(srcdir)/templates; then\
		cp -rf -L $(srcdir)/templates $(nox_installsubdir)/templates;\
		if test ! -d $(nox_installsubdir)/mako_modules; then\
			mkdir -p $(builddir)/mako_modules;\
		fi;\
	fi;

test:
	@$(PYTHON) $(top_builddir)/src/nox/coreapps/testharness/testharness.py $(TEST_FLAGS) -b $(top_builddir) ./

deferredcallback_wrap.cc deferredcallback.py: deferredcallback.i
	$(SWIG) $(SWIG_PYTHON_OPT) -outdir $(builddir)/. -o deferredcallback_wrap.cc -module deferredcallback $(srcdir)/deferredcallback.i

pycomponent_wrap.cc pycomponent.py: $(component_wrap_includes)
	$(SWIG) $(SWIG_PYTHON_OPT) $(OPENFLOW_CPPFLAGS) -I$(top_srcdir)/src/nox/lib/ -outdir $(builddir)/. -o pycomponent_wrap.cc -module pycomponent $(srcdir)/component.i

oxidereactor_wrap.cc oxidereactor.py: $(oxidereactor_wrap_includes) oxidereactor.cc
	$(SWIG) $(SWIG_PYTHON_OPT) $(OPENFLOW_CPPFLAGS) -I$(top_srcdir)/src/nox/lib/ -outdir $(builddir)/. -o oxidereactor_wrap.cc -module oxidereactor $(srcdir)/oxidereactor.i

all-local: nox-all-local
clean-local: nox-clean-local
install-exec-hook: nox-install-local

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
